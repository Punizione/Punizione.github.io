{"title":"记录一次MC开服","slug":"talk11","date":"2018-01-07T03:30:08.000Z","updated":"2018-01-07T04:36:19.289Z","comments":true,"excerpt":"","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>刚考完试几个人说要玩MC，就下了网易的正版MC，正说到网易的服务器一个月18块，这个价格几个人用着玩算很便宜了，突发奇想能不能搭个服务器来用，正好也在搞机。</p>\n<h2 id=\"服务器配置\"><a href=\"#服务器配置\" class=\"headerlink\" title=\"服务器配置\"></a>服务器配置</h2><p>首先在Vultr买台VPS，盘算一下就几个人的大概2G内存单核CPU够了，再大的配置我也吃不起，系统选择CentOS7，月付10刀，还能接受。选择日本机房，在Vultr上延迟是最低的了。国内的可以用阿里云或者腾讯云的ECS，我对于国内服务商有点小小的抵触，就用Vultr的混一混，毕竟Azure和AWS都不便宜。</p>\n<p>然后就是选择服务端了，他们想玩的是1.7.10的暮色，顺便带个高级附魔台和Home的模组，总共三个，本来Vultr有自带MC服务器的镜像的</p>\n<p><img src=\"http://p0s30qphu.bkt.clouddn.com/18-1-5/72369138.jpg\" alt=\"01\"></p>\n<p>但是实际装完之后发现是最新版本的1.12.1，模组不全，所以还是老老实实用纯净版。  </p>\n<p>关于MC服务端的选择不在这里赘述，我用的是<a href=\"https://minecraft.gamepedia.com/Cauldron\" target=\"_blank\" rel=\"external\">Cauldron</a>，至于俗称水桶服还有水龙头的那些就暂时不考虑。<br>Cauldron在国内似乎无法访问，我用的是第三方fork下来的<a href=\"http://sourceforge.net/projects/cauldron-unofficial/files/1.7.10/\" target=\"_blank\" rel=\"external\">镜像</a>，下载其中的官方服务端核心文件压缩包(libraries-XXXX.zip)和其对应的Cauldron核心(cauldron-1.7.10-XXXX-server.jar)，这其中的版本号要一致，不然不能使用。</p>\n<p><img src=\"http://p0s30qphu.bkt.clouddn.com/18-1-5/79976933.jpg\" alt=\"02\"></p>\n<p>解压压缩包后将压缩包内文件连通Cauldron核心一块上传到VPS的某个文件夹内，这里我的路径是<code>/home/mcserver</code></p>\n<p>弄完之后，首先安装Java，个人认为直接装JDK比装JRE比较好，万一以后还有用呢？至于JDK版本，MCBBS上推荐的是Oracle版，原因是对于渲染那一块Oracle版比起OpenJDK有优化，我这里图方便就用了OpenJDK版，版本为1.8<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>用1.7也可以，区别在于HashMap的底层实现，这个以后再另外讲。</p>\n<p>安装完毕后可以用<code>java -version</code>查看是否安装成功。 </p>\n<p>接下来安装Screen，这是再Linux系统下的多窗口化，可以理解为同时开多个窗口并行运作。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install screen</span><br></pre></td></tr></table></figure></p>\n<p>CentOS7自带这东西，所以在执行上面命令会显示<code>Nothing to do</code>，安装完毕后就可以开始构建服务端了。</p>\n<h2 id=\"服务端构建\"><a href=\"#服务端构建\" class=\"headerlink\" title=\"服务端构建\"></a>服务端构建</h2><p>首先在<code>/home/mcserver</code>写一个脚本<code>start.sh</code>，内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">java -Xmx2048M -Xms2048M -jar /home/mcserver/cauldron-1.7.10-XXXX.jar</span><br></pre></td></tr></table></figure></p>\n<p>这样服务端的初步狗i按就完成了，再给脚本执行权限：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 start.sh</span><br></pre></td></tr></table></figure></p>\n<p>这个时候就可以用前面装的<code>Screen</code>了，用<code>screen -S yourname</code>，创建一个新窗口，在新窗口中运行<code>sh start.sh</code>，就会看到报错信息，原因是MC1.7.10版本之后，必须要开启EULA才能运行服务端，这时会发现目录下多了许多文件，可以看到<code>`eula.txt</code>这个文件，用vim编辑这个文件，把<code>false</code>改成<code>true</code>，再重新运行<code>start.sh</code>，就可以看到服务器输出一大段信息，可以看到世界构建成功，生物生成等，这样，基础就完成了。</p>\n<p>这时需要把MOD放进去，我用的是一个SFTP的客户端WinSCP，把三个MOD的.jar文件拖入<code>mods</code>文件夹中，再一块传到<code>/home/mcserver</code>目录下，使用Ctrl+C停掉服务端进程，删除<code>world</code>这个文件夹，这是初次构建生成的世界，如果是使用对世界有影响的MOD（比如暮色），就需要删除掉原来的世界重新生成。</p>\n<p>再编辑目录下的<code>server.properties</code>文件，把<code>online-mode=true</code>改为<code>online-mode=false</code>，这样非正版的客户端启动器也可以连接进来了。  </p>\n<p>完成后，重新运行<code>sh start.sh</code>构建世界，这次可以看到生成地形的时候有暮色森林字样的文字出现，说明MOD已经被导入了。</p>\n<p>这时就可以愉快地开黑了！</p>\n<h2 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h2><p>这里说说可能会遇到的问题。<br>首先是CentOS的防火墙，构建服务端后，会发现游戏无论如何都连不上服务端，却能Ping得通，这是CentOS的防火墙拦截了MC服务端默认端口25565造成的，所以只要关闭防火墙就可以了，需要注意的是，网上大部分用CentOS6的操作是关闭<code>iptables</code>，但是CentOS7m根本就没有<code>iptables</code>，需要被关闭的是<code>firewall</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service <span class=\"comment\">#停止firewall</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service <span class=\"comment\">#禁止firewall开机启动</span></span><br></pre></td></tr></table></figure></p>\n<p>如果需要<code>iptables</code>，在关闭了<code>firewall</code>之后把<code>iptables</code>装上就好了。</p>\n<p>其次是名称问题，连接进服务器后会出现一直卡在<code>loging in</code>界面，观察服务端可以看到<code>java.io.IOException: The received string length is longer than maximum allowed</code>的异常信息，<br>这是因为该服务端只能支持一定长度的用户名，我这里限制是15位字符，而我的用户名正好是16位字符…<br>这个问题在MC论坛上也被提及过，开发者表示这是个BUG，在后续版本已经修复，所以1.7.10版本的就老老实实用不大于15位的用户名吧。</p>\n","thumbnail":["http://p0s30qphu.bkt.clouddn.com/18-1-5/5971020.jpg"],"primarycolor":"pink","accentcolor":"blue","categories":[{"name":"闲聊","path":"api/categories/闲聊.json"}],"tags":[{"name":"VPS","path":"api/tags/VPS.json"},{"name":"MineCraft","path":"api/tags/MineCraft.json"},{"name":"CentOS","path":"api/tags/CentOS.json"}]}