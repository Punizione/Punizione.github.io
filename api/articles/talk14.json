{"title":"V2搭建小计","slug":"talk14","date":"2018-02-16T14:10:47.000Z","updated":"2018-02-18T03:33:41.975Z","comments":true,"excerpt":"","content":"<h2 id=\"好久没写博客，先记他一波笔记先\"><a href=\"#好久没写博客，先记他一波笔记先\" class=\"headerlink\" title=\"好久没写博客，先记他一波笔记先\"></a>好久没写博客，先记他一波笔记先</h2><h2 id=\"安装V2\"><a href=\"#安装V2\" class=\"headerlink\" title=\"安装V2\"></a>安装V2</h2><p>最近因为一些原因大出血，所以趁着过年回一波血。搞完机顺便搭多几个以应对寒冬。<br>从零记录一遍<br>配置：CentOS7，512 MB，1 CPU，10 GB硬盘，最便宜的配置，虽然延迟不算低，但是带宽挺不错，适合用来看视频，所以正好利用V2的WebSocket+TLS+Web。</p>\n<p>注意:需要有域名！不然不能用证书！</p>\n<p>拿到机子后，先修改SSH为智能密钥登录，第一次登陆基本上可以看到很多词登录失败…因为默认22端口root用户容易被爆破。</p>\n<p>弄完机子本身的问题，开始安装V2<br>下载官方提供的一脚本：<br><code>wget https://toutyrater.github.io/install-release.sh</code><br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/54287846.jpg\" alt=\"1\"><br>执行安装：<br><code>bash install-release.sh</code><br>因为自己用的是root用户所以不用sudo，后面也是一样<br>提示装unzip失败了<br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/63369358.jpg\" alt=\"2\"><br>手动装<code>yum -y install unzip</code><br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/27708709.jpg\" alt=\"3\"><br>装完再来一遍<br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/51419812.jpg\" alt=\"4\"><br>提示完成，首次安装完成时，V2不会自己启动，需要运行<code>systemctl start v2ray</code><br>不过这里先去配置，配完再启动。</p>\n<h2 id=\"配置V2\"><a href=\"#配置V2\" class=\"headerlink\" title=\"配置V2\"></a>配置V2</h2><blockquote>\n<p>/usr/bin/v2ray/v2ray：V2Ray 程序；<br>/usr/bin/v2ray/v2ctl：V2Ray 工具；<br>/etc/v2ray/config.json：配置文件；<br>/usr/bin/v2ray/geoip.dat：IP 数据文件<br>/usr/bin/v2ray/geosite.dat：域名数据文件</p>\n</blockquote>\n<p>根据官方文档，去<code>/etc/v2ray/</code>下配置<br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/3402322.jpg\" alt=\"5\"><br>主要看红线部分</p>\n<ul>\n<li><code>port</code>是<code>nginx</code>反代的端口</li>\n<li><code>id</code>和<code>alterId</code>是用户信息，使用<a href=\"\">在线UUID生成</a>可以生成</li>\n<li><code>streamSettings</code>中<code>network</code>设为<code>ws</code>，即<code>WebSocket</code>，<code>path</code>是以域名为准的相对位置，我这里设成<code>ray</code>，V2会监听来到这里的请求并响应，假设域名是<code>abc.com</code>，那么直接访问<code>abc.com</code>将会是<code>nginx</code>的页面，访问<code>abc.com/ray</code>将会是<code>502 Bad Request</code>，用V2连的话才能连通。</li>\n</ul>\n<p>配了这些，V2服务端就好了。</p>\n<h2 id=\"证书配置\"><a href=\"#证书配置\" class=\"headerlink\" title=\"证书配置\"></a>证书配置</h2><p>证书由<code>nginx</code>来管，这里就不关V2的事了。</p>\n<p>用acme.sh脚本自动申请，下载生成证书<br><code>curl  https://get.acme.sh | sh</code><br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/44930737.jpg\" alt=\"6\"><br>装完后用命令<code>source ~/.bashrc</code>确保脚本所设置的命令别名生效。<br>顺便看到红色字体提示装个<code>socat</code>，这是个用来转发端口的，不装后面启动不了<br><code>yum install socat</code><br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/11054554.jpg\" alt=\"7\"></p>\n<p>之后便是启动脚本让其申请证书<code>~/.acme.sh/acme.sh --issue -d 你的域名 --standalone -k ec-256</code>，首先要确认80端口不被占用。<br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/29124536.jpg\" alt=\"8\"><br>可以看到申请成功，证书被放到了<code>/root/.acme.sh/</code>下</p>\n<p>把证书装到V2中<code>~/.acme.sh/acme.sh --installcert -d 你的域名--fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key --ecc</code><br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/4721103.jpg\" alt=\"10\"><br>装完，<code>/etc/v2ray</code>就出现了.key和.crt文件，去<code>nginx</code>中配置<br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/54539974.jpg\" alt=\"9\"><br>主要看红色位置 域名要填对，<code>proxy_pass</code>对应V2中的端口，<code>location</code>对应V2中的<code>path</code></p>\n<p>如果是低版本的<code>nginx</code>，<code>location</code>中的相对位置后需要加<code>\\</code>，例如<code>\\ray\\</code>，配置完后，重启<code>nginx</code>和<code>V2</code><br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/37092340.jpg\" alt=\"11\"></p>\n<p>客户端配置好相应位置，这里用的地址便是你的域名了，端口是443，传输层协议是ws，<code>path</code>和服务端配置的保持一致</p>\n<h2 id=\"配完测试\"><a href=\"#配完测试\" class=\"headerlink\" title=\"配完测试\"></a>配完测试</h2><p>客户端连接，如果能访问便是配置好了，服务端日志如下<br><img src=\"http://p0s30qphu.bkt.clouddn.com/18-2-18/73178741.jpg\" alt=\"12\"></p>\n<p>这样，带https的WebSocket层的V2就配置完了，如果有必要，还可以在域名根目录配置相应的静态网页，起到伪装效果。</p>\n","thumbnail":["http://p0s30qphu.bkt.clouddn.com/18-2-18/67879947.jpg"],"primarycolor":"green","accentcolor":"blue","categories":[{"name":"闲聊","path":"api/categories/闲聊.json"}],"tags":[{"name":"搞事","path":"api/tags/搞事.json"}]}